{"version":3,"sources":["components/PetCard/PetCard.style.tsx","components/PetCard/PetCard.tsx","services/api.ts","services/token.ts","pages/home.style.tsx","pages/Home.tsx","components/Error/ErrorWarning.style.tsx","components/Error/Errorwarning.tsx","pages/user/login.tsx","pages/user/register.tsx","services/racas.ts","services/protectedpage.ts","pages/pet/register.tsx","components/Menu/Menu.style.tsx","components/Menu/Menu.tsx","pages/pet/details.style.tsx","pages/pet/details.tsx","pages/pet/edit.tsx","App.tsx","index.tsx"],"names":["PetCardStyle","makeStyles","PetCard","overflow","width","margin","PetCardA","textDecoration","ImagePet","objectFit","maxHeight","pet","petInfo","petImage","image","Box","className","boxShadow","borderRadius","my","to","species","name","id","title","src","alt","mx","pb","Typography","variant","details","api","axios","create","baseURL","getUserToken","sessionStorage","getItem","tokenresponse","setUserToken","token","setItem","console","error","getUserID","response","JSON","parse","HomeDetails","ButtonHome","padding","Home","history","useHistory","useState","pets","setPets","Boolean","setToken","a","get","then","res","data","log","useEffect","getPets","tokenResponse","registerPetButton","display","justifyContent","Button","color","onClick","push","Container","Grid","container","spacing","item","xs","sm","align","slice","length","map","ErrorStyle","theme","root","flexGrow","marginTop","Errorwarning","props","message","Login","email","setEmail","password","setPassword","setError","HandleLogin","post","user","stringify","window","location","reload","catch","err","mt","onSubmit","event","preventDefault","TextField","value","onChange","target","label","type","required","fullWidth","Register","nome","setNome","passwordConfirm","setPasswordConfirm","termos","setTermos","password_confirmation","FormControlLabel","control","Checkbox","checked","cachorro","gato","Protectedpage","especie","setEspecie","sexo","setSexo","raca","setRaca","cor","setCor","setImage","detalhes","setDetalhes","estado","setEstado","cidade","setCidade","status2","setStatus2","racaSelect","setRacaSelect","sex","breed","city","state","status","active","alert","setTimeout","FormControl","InputLabel","Select","MenuItem","racadopet","MenuStyle","menuButton","marginRight","Menu","menuText","setMenuText","AppBar","position","Toolbar","IconButton","edge","aria-label","style","PetDetails","Tag","backgroundColor","fontSize","Details","setStatus","petuser","setPetuser","createbythisuser","setCreatebythisuser","useParams","petSpecies","petName","petId","user_id","userid","parseInt","buttonEdit","Edit","setFinishedrequest","isNaN","patch","App","path","exact","component","PetRegister","ReactDOM","render","document","getElementById"],"mappings":"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,aACA,iCACA,6BACA,qCACA,2BACA,2BACA,UACA,SACA,gCACA,2BACA,YACA,YACA,kBACA,2BACA,2BACA,SACA,YACA,aACA,yBACA,WACA,kBACA,QACA,iBACA,mBACA,oBACA,wBACA,kBACA,4CACA,qBACA,mBACA,oBACA,mBACA,mBACA,4BACA,YACA,kBACA,sBACA,kBACA,sBACA,eACA,WACA,SACA,cACA,qBACA,QACA,mBACA,aACA,aACA,qBACA,YACA,UACA,yBACA,mBACA,kBACA,uBACA,kBACA,kBACA,iCACA,WACA,mBACA,qBACA,eACA,iBACA,sCACA,yBACA,cACA,cACA,qBACA,UACA,UACA,SACA,UACA,MACA,sBACA,aACA,eACA,iCACA,SACA,WACA,kBACA,mBACA,qBACA,WACA,YACA,WACA,gBACA,eACA,gBACA,kBACA,aACA,gBACA,iBACA,iBACA,gBACA,uBACA,6BACA,WACA,SACA,aACA,sBACA,qBACA,sBACA,qBACA,sBACA,kBACA,kBACA,mBACA,OACA,aACA,yBACA,yBACA,8BACA,UACA,iBACA,qBAGWC,EAAc,CACzB,6BACA,eACA,kBACA,oCACA,aACA,aACA,UACA,mBACA,SACA,oBACA,qBACA,SACA,2BACA,UACA,sBACA,YACA,YACA,UACA,8BACA,cACA,iBACA,YACA,UACA,YACA,OACA,uBACA,kBACA,iBACA,mBACA,iBACA,gBACA,WACA,aACA,QACA,aACA,mBACA,SACA,mBACA,QACA,aACA,OACA,wBACA,eACA,iBACA,UACA,mBACA,WACA,WACA,2BACA,SACA,cACA,aACA,0BACA,2BACA,wBACA,+CACA,0BACA,yBACA,yBACA,QACA,YACA,YACA,OACA,aACA,UACA,gBACA,yBACA,WACA,gBACA,cACA,YACA,YACA,YACA,WACA,SACA,SACA,SACA,WACA,OACA,oBACA,eACA,SACA,QACA,YACA,sBCxOaC,EATO,WAElB,MAAqB,IADDpG,KCkNTsF,MA3Mf,WAAqB,IAAD,EACMnE,mBAAS,IADf,mBACXoE,EADW,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","file":"static/js/main.eefa152b.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nexport const PetCardStyle = makeStyles(() => ({\r\n    PetCard:{\r\n        overflow: \"hidden\",\r\n        width:\"calc(33% - 2rem)\",\r\n        margin:\"1rem\"\r\n    },\r\n    PetCardA: {\r\n        textDecoration: 'none',\r\n    },\r\n    ImagePet:{\r\n        width:'100%',\r\n        objectFit:'cover',\r\n        maxHeight:'150px'\r\n    }\r\n\r\n}));\r\n","import { Box, createStyles, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PetCardStyle } from './PetCard.style';\r\n\r\nexport default function PetCard({ ...props }) {\r\n  const pet = props.petInfo;\r\n  let petImage: string = pet.image;\r\n  if (petImage === \"\") {\r\n    petImage = \"https://via.placeholder.com/720c\";\r\n  }\r\n\r\n  const { PetCard, PetCardA, ImagePet } = PetCardStyle();\r\n  return (\r\n    <Box className={PetCard} boxShadow={5} borderRadius={5} my={2}>\r\n      <Link to={\"/pet-details/\"+pet.species+\"&\"+pet.name+\"&\"+pet.id} title={pet.species} className={PetCardA}>\r\n        <img className={ImagePet} src={petImage} alt={pet.species} />\r\n        <Box mx={1} pb={1}>\r\n            <Typography variant=\"h6\" >{pet.name}</Typography>\r\n            <Typography variant=\"subtitle1\">{pet.details}</Typography>\r\n        </Box>\r\n\r\n      </Link>\r\n    </Box >\r\n  );\r\n}","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://petfinder-ope.herokuapp.com/',\r\n})\r\n\r\nexport default api\r\n","export const getUserToken = ():string =>{\r\n    if (sessionStorage.getItem(\"userToken\")) {\r\n        let tokenresponse = sessionStorage.getItem(\"userToken\");\r\n        if (tokenresponse == null) {\r\n            tokenresponse = \"\";\r\n        }\r\n        return tokenresponse;\r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\nexport const setUserToken = (token:string) =>{\r\n    if(token != null ){\r\n        sessionStorage.setItem(\"userToken\",token);\r\n    }else{\r\n        console.error(\"Token Invalido\");\r\n    }\r\n}\r\nexport const getUserInfo = ():string =>{\r\n    if (sessionStorage.getItem(\"userInfo\")) {\r\n        let response = sessionStorage.getItem(\"userInfo\");\r\n        \r\n        if (response == null) {\r\n            response = \"\";\r\n            return response;\r\n        }else{\r\n            let JSONOBJ:any = JSON.parse(response);\r\n            let info = JSONOBJ;\r\n            return info;\r\n        }\r\n        \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\nexport const getUserEmail = ():string =>{\r\n    if (sessionStorage.getItem(\"userInfo\")) {\r\n        let response = sessionStorage.getItem(\"userInfo\");\r\n        \r\n        if (response == null) {\r\n            response = \"\";\r\n            return response;\r\n        }else{\r\n            let JSONOBJ:any = JSON.parse(response);\r\n            let email = JSONOBJ.email;\r\n            return email;\r\n        }\r\n        \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\nexport const getUserID = ():number =>{\r\n    if (sessionStorage.getItem(\"userInfo\")) {\r\n        let response = sessionStorage.getItem(\"userInfo\");\r\n        \r\n        if (response == null) {\r\n            response = \"\";\r\n            return 0;\r\n        }else{\r\n            let JSONOBJ:any = JSON.parse(response);\r\n            let id = JSONOBJ.id;\r\n            return id;\r\n        }\r\n        \r\n    }else{\r\n        return 0;\r\n    }\r\n}\r\nexport const setUserInfo = (token:string) =>{\r\n    if(token != null ){\r\n        sessionStorage.setItem(\"userInfo\",JSON.stringify(token));\r\n    }else{\r\n        console.error(\"Info Invalido\");\r\n    }\r\n}\r\nexport const expireUserToken = () =>{\r\n    sessionStorage.setItem(\"userToken\",\"\");\r\n    sessionStorage.setItem(\"userInfo\",\"\");\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\nexport const HomeDetails = makeStyles(() => ({\r\n  ButtonHome:{\r\n    margin: \"1rem\",\r\n    padding: \"1rem\"\r\n  }\r\n}));\r\n","import { Box, Button, Card, Container, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport PetCard from \"../components/PetCard/PetCard\";\r\nimport api from \"../services/api\";\r\nimport { getUserToken } from \"../services/token\";\r\nimport { HomeDetails } from \"./home.style\";\r\n// import { Container } from './styles';\r\nconst Home = () => {\r\n  let history = useHistory();\r\n  const [pets, setPets] = useState<Array<any>>();\r\n  const [token, setToken] = useState(Boolean);\r\n  const {ButtonHome} = HomeDetails();\r\n  async function getPets() {\r\n    api.get(\"pets\").then((res) => {\r\n      setPets(res.data);\r\n      console.log(res.data);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    getPets();\r\n    let tokenResponse = getUserToken();\r\n    if (tokenResponse != \"\") {\r\n      setToken(true);\r\n    } else {\r\n      setToken(false);\r\n    }\r\n  }, []);\r\n\r\n  const registerPetButton = \r\n  <Box display=\"flex\" justifyContent=\"center\">\r\n      <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={ButtonHome}\r\n      onClick={() => {\r\n        if(token){\r\n          history.push(\"/pet/register\");\r\n        }else{\r\n          history.push(\"/login\");\r\n        }\r\n      }}\r\n      \r\n      >\r\n        Estou procurando meu pet!\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={ButtonHome}\r\n        onClick={() => {\r\n          if(token){\r\n            history.push(\"/pet/register\");\r\n          }else{\r\n            history.push(\"/login\");\r\n          }\r\n        }}\r\n      >\r\n        Encontrei um pet perdido!\r\n      </Button>\r\n  </Box>;\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12}>\r\n          <Typography variant=\"h1\" align=\"center\">PetFinder</Typography>  \r\n          <Typography variant=\"h2\" align=\"center\">Feito para ajudar pets e donos a se encontrarem!</Typography>  \r\n          {registerPetButton}\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          <Grid container spacing={3}>\r\n            {pets &&\r\n              pets.slice(0, pets.length).map((pet) => {\r\n                return <PetCard petInfo={pet} />;\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;","import { makeStyles, Theme } from '@material-ui/core/styles';\r\nexport const ErrorStyle = makeStyles((theme: Theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: theme.spacing(2),\r\n      \"border-radius\": \"6px\",\r\n      \"padding\": \"12px\",\r\n      \"background-color\":\"#FFCCBA\",\r\n      \"color\":\"#D63301\",\r\n      \"text-align\":\"center\"\r\n    },\r\n}));","import React from 'react'\r\nimport { ErrorStyle } from \"./ErrorWarning.style\";\r\nconst Errorwarning = ({...props}) => {\r\n    const { root } = ErrorStyle();\r\n    return (\r\n        <div className={root}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Errorwarning\r\n","import React, { useState } from \"react\";\r\nimport {setUserInfo, setUserToken} from '../../services/token'\r\nimport {\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport api from \"../../services/api\";\r\nimport Errorwarning from \"../../components/Error/Errorwarning\";\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const HandleLogin= () => {\r\n\r\n    api.post('/users/login',{\r\n      email : email,\r\n      password: password,\r\n    }).then((res)=>{\r\n      setUserToken(res.data.token);\r\n      setUserInfo(res.data.user);\r\n      history.push(\"/\");\r\n      window.location.reload(false);\r\n    }).catch((err) => {\r\n      console.error(\"ops! ocorreu um erro\" + err);\r\n      setError(\"ops! ocorreu um erro\" + err);\r\n    });\r\n  }\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box mt={2}>\r\n            <Typography variant=\"h5\">Bem-vindo de volta</Typography>\r\n          </Box>\r\n          <form\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n              HandleLogin();\r\n            }}\r\n          >\r\n            <TextField\r\n              value={email}\r\n              onChange={(event) => {\r\n                setEmail(event.target.value);\r\n              }}\r\n              id=\"Email\"\r\n              label=\"Digite seu email\"\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n\r\n            <TextField\r\n              value={password}\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n              }}\r\n              id=\"Password\"\r\n              label=\"Digite sua senha\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Fazer Login\r\n            </Button>\r\n            {error != \"\" && <Errorwarning message={error}></Errorwarning>}\r\n          </form>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box mt={2}>\r\n            <Typography variant=\"h5\">Primeira vez aqui?</Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Precisamos de algumas informações suas para começarmos\r\n            </Typography>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                history.push(\"/register\");\r\n              }}\r\n            >\r\n              Criar Conta\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  TextField,\r\n  Box,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport api from \"../../services/api\";\r\nimport { setUserToken } from \"../../services/token\";\r\nimport Errorwarning from \"../../components/Error/Errorwarning\";\r\n\r\nfunction Register() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [termos, setTermos] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  let history = useHistory();\r\n  const HandleRegister = () => {\r\n    api.post('/users/signup',{\r\n      email : email,\r\n      password: password,\r\n      password_confirmation : passwordConfirm,\r\n    }).then((res)=>{\r\n      //console.log(res.data); // Token\r\n      setUserToken(res.data);\r\n      history.push(\"/\");\r\n    }).catch((err) => {\r\n      console.error(\"ops! ocorreu um erro\" + err);\r\n      setError(\"ops! ocorreu um erro\" + err);\r\n    });\r\n  }\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box mt={2}>\r\n            <Typography variant=\"h5\">Já esteve aqui?</Typography>\r\n            <Typography variant=\"subtitle1\">Sentimos sua falta!</Typography>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                history.push(\"/login\");\r\n              }}\r\n            >\r\n              Fazer Login\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box mt={2}>\r\n            <Typography variant=\"h5\">Criando uma conta nova</Typography>\r\n          </Box>\r\n\r\n          <form\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n              HandleRegister();\r\n            }}\r\n          >\r\n            <TextField\r\n              required\r\n              id=\"Name\"\r\n              label=\"Qual o seu Nome\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              value={nome}\r\n              onChange={(event) => {\r\n                setNome(event.target.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"Email\"\r\n              label=\"Digite sua email\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              value={email}\r\n              onChange={(event) => {\r\n                setEmail(event.target.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"Password\"\r\n              label=\"Digite sua senha\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              value={password}\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"Password\"\r\n              label=\"Confirme sua senha\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              value={passwordConfirm}\r\n              onChange={(event) => {\r\n                setPasswordConfirm(event.target.value);\r\n              }}\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  value={termos}\r\n                  onChange={(event) => {\r\n                    setTermos(event.target.checked);\r\n                  }}\r\n                />\r\n              }\r\n              label=\"Aceito os termos de uso\"\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Finalizar Cadastro\r\n            </Button>\r\n            {error != \"\" && <Errorwarning message={error}></Errorwarning>}\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","export const cachorro: any[] = [\r\n  \"Sem Raça Definida (SRD)\",\r\n  \"Afegão\",\r\n  \"Afghan Hound\",\r\n  \"Affenpinscher\",\r\n  \"Airedale Terrier\",\r\n  \"Akita Americano\",\r\n  \"Akita Inu\",\r\n  \"Akita Japonês\",\r\n  \"Alano Espanhol\",\r\n  \"American Staffordshire Terrier\",\r\n  \"American Water Spaniel\",\r\n  \"Barbet\",\r\n  \"Basenji\",\r\n  \"Basset Azul da Gasconha\",\r\n  \"Basset Fulvo da Bretanha\",\r\n  \"Basset Hound\",\r\n  \"Beagle\",\r\n  \"Beagle Harrier\",\r\n  \"Bearded Collie\",\r\n  \"Bedlington Terrier\",\r\n  \"Bernese Mountain Dog\",\r\n  \"Bichon Bolonhês\",\r\n  \"Bichon Havanês\",\r\n  \"Bichon Frisé\",\r\n  \"Bichon Maltês\",\r\n  \"Bloodhound\",\r\n  \"Boiadeiro Australiano\",\r\n  \"Boiadeiro Bernês\",\r\n  \"Border Collie\",\r\n  \"Border Terrier\",\r\n  \"Borzoi\",\r\n  \"Boston Terrier\",\r\n  \"Boxer\",\r\n  \"Bull Terrier\",\r\n  \"Buldogue\",\r\n  \"Bulldog Inglês\",\r\n  \"Buldogue\",\r\n  \"Bulldog Francês\",\r\n  \"Bullmastiff\",\r\n  \"Bulmastife\",\r\n  \"Cairn Terrier\",\r\n  \"Cane Corso\",\r\n  \"Cão de Água Português\",\r\n  \"Cão de Crista Chinês\",\r\n  \"Cão de Montanha dos Pirinéus\",\r\n  \"Cão lobo checoslovaco\",\r\n  \"Cão da Groenlândia\",\r\n  \"Caniche\",\r\n  \"Poodle\",\r\n  \"Cavalier King Charles Spaniel\",\r\n  \"Chesapeake Bay Retriever\",\r\n  \"Chihuahua\",\r\n  \"Chow Chow\",\r\n  \"Cirneco do Etna\",\r\n  \"Cocker Spaniel Americano\",\r\n  \"Cocker Spaniel Inglês\",\r\n  \"Collie\",\r\n  \"Dachshund\",\r\n  \"Dálmata\",\r\n  \"Dandie Dinmont Terrier\",\r\n  \"Doberman\",\r\n  \"Dogue Alemão\",\r\n  \"Dogue\",\r\n  \"Dogo Argentino\",\r\n  \"Dogue Canário\",\r\n  \"Dogue de Bordeaux\",\r\n  \"Elkhound Norueguês\",\r\n  \"Fila Brasileiro\",\r\n  \"Fox Terrier (Pêlo Duro e Pêlo Liso)\",\r\n  \"Foxhound Inglês\",\r\n  \"Galgo Escocês\",\r\n  \"Galgo Irlandês\",\r\n  \"Golden Retriever\",\r\n  \"Gos d’Atura\",\r\n  \"Grande Boiadeiro Suiço\",\r\n  \"Greyhound\",\r\n  \"Galgo Inglês\",\r\n  \"Grifo da Bélgica\",\r\n  \"Husky Siberiano\",\r\n  \"Jack Russel Terrier\",\r\n  \"King Charles\",\r\n  \"Komondor\",\r\n  \"Kuvasz\",\r\n  \"Labradoodle\",\r\n  \"Labrador Retriever\",\r\n  \"Laika\",\r\n  \"Lakeland Terrier\",\r\n  \"Leonberger\",\r\n  \"Lhasa Apso\",\r\n  \"Malamute-do-Alasca\",\r\n  \"Maltês\",\r\n  \"Mastife\",\r\n  \"Mastin dos Pirenéus\",\r\n  \"Mastin do Tibete\",\r\n  \"Mastin Espanhol\",\r\n  \"Mastín Napolitano\",\r\n  \"Norfolk Terrier\",\r\n  \"Norwich Terrier\",\r\n  \"Old English Sheepdog (Bobtail)\",\r\n  \"Papillon\",\r\n  \"Pastor Alemão\",\r\n  \"Pastor Australiano\",\r\n  \"Pastor Belga\",\r\n  \"Pastor de Brie\",\r\n  \"Pastor dos Pirenéus de Cara Rosa\",\r\n  \"Pequeno Cão Leão\",\r\n  \"Pequinês\",\r\n  \"Perdigueiro\",\r\n  \"Pinscher miniatura\",\r\n  \"Pitbull\",\r\n  \"Podengo\",\r\n  \"Poodle\",\r\n  \"Pointer\",\r\n  \"Pug\",\r\n  \"Rhodesian Ridgeback\",\r\n  \"Rottweiler\",\r\n  \"Rough Collie\",\r\n  \"Sabueso (Espanhol ou Italiano)\",\r\n  \"Saluki\",\r\n  \"Samoieda\",\r\n  \"São Bernardo\",\r\n  \"Scottish Terrier\",\r\n  \"Setter Irlandés\",\r\n  \"Shar-Pei\",\r\n  \"Shiba Inu\",\r\n  \"Shih Tzu\",\r\n  \"SilKy Terrier\",\r\n  \"Skye Terrier\",\r\n  \"Smooth Collie\",\r\n  \"Spitz Alemão\",\r\n  \"Spitz Lobo\",\r\n  \"Spitz Gigante\",\r\n  \"Spitz Médio\",\r\n  \"Spitz Pequeno \",\r\n  \"Spitz Anão\",\r\n  \"Lulu da Pomerânia\",\r\n  \"Staffordshire Bull Terrier\",\r\n  \"Tamaskan\",\r\n  \"Teckel\",\r\n  \"Terra Nova\",\r\n  \"Terrier Australiano\",\r\n  \"Terrier Escocês\",\r\n  \"Terrier Irlandês\",\r\n  \"Terrier Japonês\",\r\n  \"Terrier Negro Russo\",\r\n  \"Terrier Norfolk\",\r\n  \"Terrier Norwich\",\r\n  \"Terrier Tibetano\",\r\n  \"Tosa\",\r\n  \"Weimaraner\",\r\n  \"Welsh Corgi (Cardigan)\",\r\n  \"Welsh Corgi (Pembroke)\",\r\n  \"West Highland White Terrier\",\r\n  \"Whippet\",\r\n  \"Xoloitzcuintli\",\r\n  \"Yorkshire Terrier\",\r\n];\r\n\r\nexport const gato: any[] = [\r\n  \"Sem Raça Definida (SRD)\",\r\n  \"Abissínio\",\r\n  \"Angorá Turco\",\r\n  \"Asiático de Pêlo Semi-Longo\",\r\n  \"Azul Russo\",\r\n  \"Balinês\",\r\n  \"Bambino\",\r\n  \"Bicolor Oriental\",\r\n  \"Bengal\",\r\n  \"Bobtail americano\",\r\n  \"Bobtail japonês\",\r\n  \"Bombay\",\r\n  \"Burmês ou Birmanês\",\r\n  \"Burmila\",\r\n  \"California Spangled\",\r\n  \"Cingapura\",\r\n  \"Chartreux\",\r\n  \"Chausie\",\r\n  \"Colorpoint de Pêlo Curto\",\r\n  \"Cornish Rex\",\r\n  \"Curl Americano\",\r\n  \"Devon Rex\",\r\n  \"Donskoy\",\r\n  \"Dragon Li\",\r\n  \"Egeu\",\r\n  \"Exótico Shorthair\",\r\n  \"Gato de Bengala\",\r\n  \"Gato do Chipre\",\r\n  \"Gato Asiático\",\r\n  \"Gato Siberiano\",\r\n  \"Havana Marrom\",\r\n  \"Himalaio\",\r\n  \"Javanês\",\r\n  \"Korat\",\r\n  \"Khao Manee\",\r\n  \"Kurilian Bobtail\",\r\n  \"LaPerm\",\r\n  \"Levkoy Ucraniano\",\r\n  \"Lykoi\",\r\n  \"Maine Coon\",\r\n  \"Manx\",\r\n  \"Manx de Pêlo Longo\",\r\n  \"Mau Árabe\",\r\n  \"Mau Egípcio\",\r\n  \"MinsKin\",\r\n  \"Mist Australiano\",\r\n  \"Munchkin\",\r\n  \"Nebelung\",\r\n  \"Norueguês da Floresta\",\r\n  \"Ocicat\",\r\n  \"Ojos Azules\",\r\n  \"Oregon Rex\",\r\n  \"Pêlo Curto Americano\",\r\n  \"Pêlo Curto Brasileiro\",\r\n  \"Pêlo Curto Europeu\",\r\n  \"Pêlo Curto Inglês ou British Shorthair\",\r\n  \"Pêlo Longo Inglês\",\r\n  \"Pêlo Curto Oriental\",\r\n  \"Pêlo Longo Oriental\",\r\n  \"Persa\",\r\n  \"Peterbald\",\r\n  \"Pixie-bob\",\r\n  \"Raas\",\r\n  \"Ragamuffin\",\r\n  \"Ragdoll\",\r\n  \"Rex Alemão\",\r\n  \"Sagrado da Birmânia\",\r\n  \"Savannah\",\r\n  \"Scottish Fold\",\r\n  \"Selkirk Rex\",\r\n  \"Serengeti\",\r\n  \"Siamês\",\r\n  \"Singapura\",\r\n  \"Snowshoe\",\r\n  \"Sokoke\",\r\n  \"Somali\",\r\n  \"Sphynx\",\r\n  \"Suphalak\",\r\n  \"Thai\",\r\n  \"Tiffany-Chantilly\",\r\n  \"Tonquinês\",\r\n  \"Toyger\",\r\n  \"Usuri\",\r\n  \"Van Turco\",\r\n  \"Wirehair Americano\",\r\n];\r\n","import { getUserToken } from \"./token\";\r\n//Implementar uma validação melhor de token\r\n\r\nconst Protectedpage = () =>{\r\n    let tokenResponse = getUserToken();\r\n    if (tokenResponse != \"\") {\r\n      return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default Protectedpage","import { Button, TextField, Container, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport api from '../../services/api';\r\nimport { getUserToken } from '../../services/token';\r\nimport {cachorro,gato} from '../../services/racas';\r\nimport Protectedpage from '../../services/protectedpage';\r\nimport Errorwarning from \"../../components/Error/Errorwarning\";\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction Register() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [especie, setEspecie] = useState(\"\");\r\n  const [sexo, setSexo] = useState(\"\");\r\n  const [raca, setRaca] = useState(\"\");\r\n  const [cor, setCor] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [detalhes, setDetalhes] = useState(\"\");\r\n  const [estado, setEstado] = useState(\"\");\r\n  const [cidade, setCidade] = useState(\"\");\r\n  const [status2, setStatus2] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [racaSelect,setRacaSelect]=useState([]) as any;\r\n  let history = useHistory();\r\n  const HandleRegister = () => {\r\n    api.post('/pets',{\r\n      name : nome,\r\n      species : especie,\r\n      sex : sexo,\r\n      breed: raca,\r\n      color : cor,\r\n      image: image,\r\n      details: detalhes,\r\n      city: cidade,\r\n      state: estado,\r\n      status: status2,\r\n      active: true,\r\n      token : token,\r\n\r\n    }).then((res)=>{\r\n      //console.log(res.data); // Token\r\n      alert(`Pet ${nome} criado com sucesso`);\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, 1000);\r\n    }).catch((err) => {\r\n      console.error(\"ops! ocorreu um erro\" + err);\r\n      setError(\"ops! ocorreu um erro\" + err);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let tokenResponse = getUserToken();\r\n    let userValid = Protectedpage();\r\n    if(userValid == false){history.push(\"/login\");}\r\n    setToken(tokenResponse);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (especie == \"dog\") {\r\n      setRacaSelect(cachorro);\r\n    }else{\r\n      setRacaSelect(gato);\r\n    }\r\n  }, [especie])\r\n\r\n\r\n  return (\r\n    <Container>\r\n       {error != \"\" && <Errorwarning message={error}></Errorwarning>}\r\n      <form\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          HandleRegister();\r\n      }}>\r\n          <TextField value={nome}\r\n          onChange={(event) => {\r\n            setNome(event.target.value);\r\n          }} id=\"Nomedopet\" label=\"Nome do pet\" type=\"text\"\r\n            variant=\"outlined\" margin=\"normal\" />\r\n          <FormControl margin=\"dense\" fullWidth variant=\"outlined\">\r\n            <InputLabel>Especie</InputLabel>\r\n            <Select\r\n            label=\"Especie\"\r\n            value={especie}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setEspecie(event.target.value as string);\r\n            }}\r\n            >\r\n              <MenuItem value={\"dog\"}>Cachorro</MenuItem>\r\n              <MenuItem value={\"cat\"}>Gato</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl margin=\"dense\" fullWidth variant=\"outlined\">\r\n            <InputLabel>Sexo</InputLabel>\r\n            <Select\r\n            label=\"Sexo\"\r\n            value={sexo}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setSexo(event.target.value as string);\r\n            }}\r\n            >\r\n              <MenuItem value={\"female\"}>Femea</MenuItem>\r\n              <MenuItem value={\"male\"}>Macho</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl margin=\"dense\" fullWidth variant=\"outlined\">\r\n            <InputLabel>Raça</InputLabel>\r\n              <Select\r\n              label=\"Raça\"\r\n              value={raca}\r\n              onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n                setRaca(event.target.value as string);\r\n              }}\r\n              >\r\n               \r\n                {racaSelect &&\r\n                   racaSelect.map((racadopet:any)=>{\r\n                    return <MenuItem value={racadopet}> {racadopet} </MenuItem>\r\n                   })\r\n                }\r\n              </Select>\r\n          </FormControl>\r\n\r\n          <TextField value={cor}\r\n          onChange={(event) => {\r\n            setCor(event.target.value);\r\n          }} id=\"cor\" label=\"cor\" type=\"text\" \r\n            variant=\"outlined\" margin=\"normal\"/>\r\n          <TextField value={image}\r\n          onChange={(event) => {\r\n            setImage(event.target.value);\r\n          }} id=\"image\" label=\"image\" type=\"text\" \r\n            variant=\"outlined\" margin=\"normal\"/>\r\n          <TextField value={detalhes}\r\n          onChange={(event) => {\r\n            setDetalhes(event.target.value);\r\n          }} id=\"detalhes\" label=\"detalhes\" type=\"text\" \r\n            variant=\"outlined\" margin=\"normal\" fullWidth/>\r\n\r\n          <FormControl margin=\"dense\" fullWidth variant=\"outlined\">\r\n            <InputLabel>Estado</InputLabel>\r\n            <Select\r\n            label=\"Estado\"\r\n            value={estado}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setEstado(event.target.value as string);\r\n            }}\r\n            >\r\n              <MenuItem value={\"Acre\"}> Acre </MenuItem>\r\n              <MenuItem value={\"Alagoas\"}> Alagoas </MenuItem>\r\n              <MenuItem value={\"Amapá\"}> Amapá </MenuItem>\r\n              <MenuItem value={\"Amazonas\"}> Amazonas </MenuItem>\r\n              <MenuItem value={\"Bahia\"}> Bahia </MenuItem>\r\n              <MenuItem value={\"Ceará\"}> Ceará </MenuItem>\r\n              <MenuItem value={\"Distrito Federal\"}> Distrito Federal </MenuItem>\r\n              <MenuItem value={\"Espírito Santo\"}> Espírito Santo </MenuItem>\r\n              <MenuItem value={\"Goiás\"}> Goiás </MenuItem>\r\n              <MenuItem value={\"Maranhão\"}> Maranhão </MenuItem>\r\n              <MenuItem value={\"Mato Grosso\"}> Mato Grosso </MenuItem>\r\n              <MenuItem value={\"Mato Grosso do Sul\"}> Mato Grosso do Sul </MenuItem>\r\n              <MenuItem value={\"Minas Gerais\"}> Minas Gerais </MenuItem>\r\n              <MenuItem value={\"Pará\"}> Pará </MenuItem>\r\n              <MenuItem value={\"Paraíba\"}> Paraíba </MenuItem>\r\n              <MenuItem value={\"Paraná\"}> Paraná </MenuItem>\r\n              <MenuItem value={\"Pernambuco\"}> Pernambuco </MenuItem>\r\n              <MenuItem value={\"Piauí\"}> Piauí </MenuItem>\r\n              <MenuItem value={\"Rio de Janeiro\"}> Rio de Janeiro </MenuItem>\r\n              <MenuItem value={\"Rio Grande do Norte\"}> Rio Grande do Norte </MenuItem>\r\n              <MenuItem value={\"Rio Grande do Sul\"}> Rio Grande do Sul </MenuItem>\r\n              <MenuItem value={\"Rondônia\"}> Rondônia </MenuItem>\r\n              <MenuItem value={\"Roraima\"}> Roraima </MenuItem>\r\n              <MenuItem value={\"Santa Catarina\"}> Santa Catarina </MenuItem>\r\n              <MenuItem value={\"São Paulo\"}> São Paulo </MenuItem>\r\n              <MenuItem value={\"Sergipe\"}> Sergipe </MenuItem>\r\n              <MenuItem value={\"Tocantins\"}> Tocantins </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n\r\n\r\n          <TextField value={cidade}\r\n          onChange={(event) => {\r\n            setCidade(event.target.value);\r\n          }} id=\"Cidade\" label=\"Cidade\" type=\"text\" \r\n            variant=\"outlined\" margin=\"normal\" fullWidth/>\r\n\r\n          <FormControl margin=\"dense\" fullWidth variant=\"outlined\">\r\n            <InputLabel>Status</InputLabel>\r\n            <Select\r\n            label=\"Status\"\r\n            value={status2}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setStatus2(event.target.value as string);\r\n            }}\r\n            >\r\n            <MenuItem value={\"found\"}>Perdido</MenuItem>\r\n            <MenuItem value={\"lost\"}>Encontrado</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\"\r\n          fullWidth>\r\n              Finalizar Cadastro\r\n          </Button>\r\n         \r\n      </form>\r\n    </Container>\r\n)\r\n}\r\n\r\nexport default Register;\r\n","import { makeStyles, Theme } from '@material-ui/core/styles';\r\nexport const MenuStyle = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Box, Container, MenuItem } from \"@material-ui/core\";\r\nimport { MenuStyle } from \"./Menu.style\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { expireUserToken, getUserToken } from \"../../services/token\";\r\n\r\nexport default function Menu() {\r\n  const { root, menuButton, title } = MenuStyle();\r\n  let history = useHistory();\r\n  const [token, setToken] = useState(Boolean);\r\n  const [menuText, setMenuText] = useState(\"Login\");\r\n  useEffect(() => {\r\n    let tokenResponse = getUserToken();\r\n    if (tokenResponse != \"\") {\r\n      setToken(true);\r\n    } else {\r\n      setToken(false);\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (token) {\r\n      setMenuText(\"Sair\")\r\n    } else {\r\n      setMenuText(\"Login\")\r\n    }\r\n  }, [token]);\r\n\r\n\r\n  return (\r\n    <Box>\r\n      <div className={root}>\r\n        <AppBar position=\"static\">\r\n          \r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"initial\" className={title}>\r\n              <Link to=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                Pets 🐶\r\n              </Link>\r\n            </Typography>\r\n\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                if(token){\r\n                  expireUserToken();\r\n                  setToken(false);\r\n                  window.location.reload(false);\r\n                }\r\n                history.push(\"/login\");\r\n                window.location.reload(false);\r\n              }}\r\n            >\r\n              {menuText}\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nexport const PetDetails = makeStyles(() => ({\r\n  ImagePet: {\r\n    width: \"100%\",\r\n  },\r\n  Tag: {\r\n    backgroundColor: \"orange\",\r\n    borderRadius: \"25px\",\r\n    display: \"inline-flex\",\r\n    justifyContent: \"center\",\r\n    color: \"white\",\r\n    padding: \"0 15px\",\r\n    fontSize: \"11px\",\r\n    marginRight: \" 10px\",\r\n  },\r\n}));\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from \"../../services/api\";\r\nimport { getUserID, getUserInfo } from \"../../services/token\";\r\nimport { PetDetails } from \"./details.style\";\r\nexport default function Details() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [especie, setEspecie] = useState(\"\");\r\n  const [sexo, setSexo] = useState(\"\");\r\n  const [raca, setRaca] = useState(\"\");\r\n  const [cor, setCor] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [detalhes, setDetalhes] = useState(\"\");\r\n  const [estado, setEstado] = useState(\"\");\r\n  const [cidade, setCidade] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [petuser, setPetuser] = useState(\"\");\r\n  const [createbythisuser, setCreatebythisuser] = useState(false);\r\n  let { petSpecies,petName,petId } = useParams<Record<string, string>>();\r\n  const { ImagePet, Tag } = PetDetails();\r\n  async function getPets() {\r\n    api.get(`pets/${petId}`).then((res) => {\r\n      const pets = res.data;\r\n      //console.log(pets);\r\n      setNome(pets.name);\r\n      setEspecie(pets.species);\r\n      setSexo(pets.sex);\r\n      setRaca(pets.breed);\r\n      setCor(pets.color);\r\n      setImage(pets.image);\r\n      setImage(pets.image);\r\n      setDetalhes(pets.details);\r\n      setEstado(pets.state);\r\n      setCidade(pets.city);\r\n      setStatus(pets.status);\r\n      setPetuser(pets.user_id);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    getPets();\r\n  }, []);\r\n  useEffect(() => {\r\n    let userid;\r\n    userid = getUserID();\r\n    if(userid == parseInt(petuser)){\r\n      console.log(\"USER ID IGUAL!\",userid);\r\n      setCreatebythisuser(true);\r\n    }\r\n  }, [petuser]);\r\n  let buttonEdit = <Button><Link to={`./${petSpecies+\"&\"+petName+\"&\"+petId}/edit`}>Editar esse pet</Link></Button>;\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <img\r\n            src={image != \"\" ? image : \"https://via.placeholder.com/720c\"}\r\n            className={ImagePet}\r\n            alt={nome}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Box mt={2}>\r\n            <Typography variant=\"h5\">{nome}</Typography>\r\n            <Typography className={Tag} variant=\"subtitle1\">\r\n              {especie}\r\n            </Typography>\r\n            <Typography className={Tag} variant=\"subtitle1\">\r\n              {sexo}\r\n            </Typography>\r\n            <Typography className={Tag} variant=\"subtitle1\">\r\n              {raca}\r\n            </Typography>\r\n            <Typography className={Tag} variant=\"subtitle1\">\r\n              {cor}\r\n            </Typography>\r\n            {createbythisuser && buttonEdit}\r\n            \r\n            <Typography variant=\"h6\">{detalhes}</Typography>\r\n            <Typography variant=\"subtitle1\">{estado}</Typography>\r\n            <Typography variant=\"subtitle1\">{cidade}</Typography>\r\n            <Typography variant=\"subtitle1\">{status}</Typography>\r\n            \r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { Button, TextField, Container, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport api from '../../services/api';\r\nimport { getUserID, getUserToken } from '../../services/token';\r\nimport { useParams } from \"react-router\";\r\nimport {cachorro,gato} from '../../services/racas';\r\nimport Protectedpage from '../../services/protectedpage';\r\nimport Errorwarning from '../../components/Error/Errorwarning';\r\n// import { Container } from './styles';\r\n\r\nfunction Edit() {\r\n  let { petId } = useParams<Record<string, string>>();\r\n  const [nome, setNome] = useState(\"\");\r\n  const [especie, setEspecie] = useState(\"\");\r\n  const [sexo, setSexo] = useState(\"\");\r\n  const [raca, setRaca] = useState(\"\");\r\n  const [cor, setCor] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [detalhes, setDetalhes] = useState(\"\");\r\n  const [estado, setEstado] = useState(\"\");\r\n  const [cidade, setCidade] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [petuser, setPetuser] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [finishedrequest, setFinishedrequest] = useState(false);\r\n  let history = useHistory();\r\n  const [racaSelect,setRacaSelect]=useState(cachorro) as any;\r\n\r\n  async function getPets() {\r\n    api.get(`pets/${petId}`).then((res) => {\r\n      const pets = res.data;\r\n      //console.log(pets);\r\n      setNome(pets.name);\r\n      setEspecie(pets.species);\r\n      setSexo(pets.sex);\r\n      setRaca(pets.breed);\r\n      setCor(pets.color);\r\n      setImage(pets.image);\r\n      setImage(pets.image);\r\n      setDetalhes(pets.details);\r\n      setEstado(pets.state);\r\n      setCidade(pets.city);\r\n      setStatus(pets.status);\r\n      setPetuser(pets.user_id);\r\n      setFinishedrequest(true);\r\n    });\r\n\r\n  }\r\n  useEffect(() => {\r\n    getPets();\r\n    let userValid = Protectedpage();\r\n    if(userValid == false){history.push(\"/login\");}\r\n  }, []);\r\n  useEffect(() => {\r\n    //Validação se o pet foi criado por você mesmo\r\n    let userid;\r\n    userid = getUserID();\r\n    console.log(userid,parseInt(petuser))\r\n    if(userid != parseInt(petuser) && isNaN(parseInt(petuser)) == false ){\r\n      history.push(\"/\");\r\n    }\r\n  }, [petuser]);\r\n  const HandleEdit = () => {\r\n    api.patch(`pets/${petId}`,{\r\n      name : nome,\r\n      species : especie,\r\n      sex : sexo,\r\n      breed: raca,\r\n      color : cor,\r\n      image: image,\r\n      details: detalhes,\r\n      city: cidade,\r\n      state: estado,\r\n      status: status,\r\n      active: true,\r\n      token : token,\r\n\r\n    }).then((res)=>{\r\n      //console.log(res.data); // Token\r\n      alert(`Pet ${nome} Editado com sucesso`);\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, 1000);\r\n    }).catch((err) => {\r\n      console.error(\"ops! ocorreu um erro\" + err);\r\n      // alert(\"ops! ocorreu um erro\" + err)\r\n      setError(\"ops! ocorreu um erro\" + err);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let tokenResponse = getUserToken();\r\n    setToken(tokenResponse);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (especie == \"dog\") {\r\n      setRacaSelect(cachorro);\r\n    }else{\r\n      setRacaSelect(gato);\r\n    }\r\n  }, [especie])\r\n\r\n\r\n  return (\r\n    <Container>\r\n      {error != \"\" && <Errorwarning message={error}></Errorwarning>}\r\n      <form\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          HandleEdit();\r\n      }}>\r\n          <TextField value={nome}\r\n          onChange={(event) => {\r\n            setNome(event.target.value);\r\n          }} id=\"Nomedopet\" label=\"Nome do pet\" type=\"text\"\r\n            variant=\"outlined\" margin=\"normal\" />\r\n          <FormControl margin=\"dense\" fullWidth variant=\"outlined\">\r\n            <InputLabel>Especie</InputLabel>\r\n            <Select\r\n            label=\"Especie\"\r\n            value={especie}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setEspecie(event.target.value as string);\r\n            }}\r\n            >\r\n              <MenuItem value={\"dog\"}>Cachorro</MenuItem>\r\n              <MenuItem value={\"cat\"}>Gato</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl margin=\"dense\" fullWidth variant=\"outlined\">\r\n            <InputLabel>Sexo</InputLabel>\r\n            <Select\r\n            label=\"Sexo\"\r\n            value={sexo}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setSexo(event.target.value as string);\r\n            }}\r\n            >\r\n              <MenuItem value={\"female\"}>Femea</MenuItem>\r\n              <MenuItem value={\"male\"}>Macho</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl margin=\"dense\" fullWidth variant=\"outlined\">\r\n            <InputLabel>Raça</InputLabel>\r\n              <Select\r\n              label=\"Raça\"\r\n              value={raca}\r\n              onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n                setRaca(event.target.value as string);\r\n              }}\r\n              >\r\n               \r\n                {racaSelect &&\r\n                   racaSelect.map((racadopet:any)=>{\r\n                    return <MenuItem value={racadopet}> {racadopet} </MenuItem>\r\n                   })\r\n                }\r\n              </Select>\r\n          </FormControl>\r\n\r\n          <TextField value={cor}\r\n          onChange={(event) => {\r\n            setCor(event.target.value);\r\n          }} id=\"cor\" label=\"cor\" type=\"text\" \r\n            variant=\"outlined\" margin=\"normal\"/>\r\n          <TextField value={image}\r\n          onChange={(event) => {\r\n            setImage(event.target.value);\r\n          }} id=\"image\" label=\"image\" type=\"text\" \r\n            variant=\"outlined\" margin=\"normal\"/>\r\n          <TextField value={detalhes}\r\n          onChange={(event) => {\r\n            setDetalhes(event.target.value);\r\n          }} id=\"detalhes\" label=\"detalhes\" type=\"text\" \r\n            variant=\"outlined\" margin=\"normal\" fullWidth/>\r\n\r\n          <FormControl margin=\"dense\" fullWidth variant=\"outlined\">\r\n            <InputLabel>Estado</InputLabel>\r\n            <Select\r\n            label=\"Estado\"\r\n            value={estado}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setEstado(event.target.value as string);\r\n            }}\r\n            >\r\n              <MenuItem value={\"Acre\"}> Acre </MenuItem>\r\n              <MenuItem value={\"Alagoas\"}> Alagoas </MenuItem>\r\n              <MenuItem value={\"Amapá\"}> Amapá </MenuItem>\r\n              <MenuItem value={\"Amazonas\"}> Amazonas </MenuItem>\r\n              <MenuItem value={\"Bahia\"}> Bahia </MenuItem>\r\n              <MenuItem value={\"Ceará\"}> Ceará </MenuItem>\r\n              <MenuItem value={\"Distrito Federal\"}> Distrito Federal </MenuItem>\r\n              <MenuItem value={\"Espírito Santo\"}> Espírito Santo </MenuItem>\r\n              <MenuItem value={\"Goiás\"}> Goiás </MenuItem>\r\n              <MenuItem value={\"Maranhão\"}> Maranhão </MenuItem>\r\n              <MenuItem value={\"Mato Grosso\"}> Mato Grosso </MenuItem>\r\n              <MenuItem value={\"Mato Grosso do Sul\"}> Mato Grosso do Sul </MenuItem>\r\n              <MenuItem value={\"Minas Gerais\"}> Minas Gerais </MenuItem>\r\n              <MenuItem value={\"Pará\"}> Pará </MenuItem>\r\n              <MenuItem value={\"Paraíba\"}> Paraíba </MenuItem>\r\n              <MenuItem value={\"Paraná\"}> Paraná </MenuItem>\r\n              <MenuItem value={\"Pernambuco\"}> Pernambuco </MenuItem>\r\n              <MenuItem value={\"Piauí\"}> Piauí </MenuItem>\r\n              <MenuItem value={\"Rio de Janeiro\"}> Rio de Janeiro </MenuItem>\r\n              <MenuItem value={\"Rio Grande do Norte\"}> Rio Grande do Norte </MenuItem>\r\n              <MenuItem value={\"Rio Grande do Sul\"}> Rio Grande do Sul </MenuItem>\r\n              <MenuItem value={\"Rondônia\"}> Rondônia </MenuItem>\r\n              <MenuItem value={\"Roraima\"}> Roraima </MenuItem>\r\n              <MenuItem value={\"Santa Catarina\"}> Santa Catarina </MenuItem>\r\n              <MenuItem value={\"São Paulo\"}> São Paulo </MenuItem>\r\n              <MenuItem value={\"Sergipe\"}> Sergipe </MenuItem>\r\n              <MenuItem value={\"Tocantins\"}> Tocantins </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n\r\n\r\n          <TextField value={cidade}\r\n          onChange={(event) => {\r\n            setCidade(event.target.value);\r\n          }} id=\"Cidade\" label=\"Cidade\" type=\"text\" \r\n            variant=\"outlined\" margin=\"normal\" fullWidth/>\r\n\r\n          <FormControl margin=\"dense\" fullWidth variant=\"outlined\">\r\n            <InputLabel>Status</InputLabel>\r\n            <Select\r\n            label=\"Status\"\r\n            value={status}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setStatus(event.target.value as string);\r\n            }}\r\n            >\r\n            <MenuItem value={\"found\"}>Perdido</MenuItem>\r\n            <MenuItem value={\"lost\"}>Encontrado</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\"\r\n          fullWidth>\r\n              Salvar alterações\r\n          </Button>\r\n      </form>\r\n    </Container>\r\n)\r\n}\r\n\r\nexport default Edit;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport './services/reset.css';\r\nimport Home from './pages/Home';\r\nimport Login from './pages/user/login';\r\nimport Register from './pages/user/register';\r\nimport PetRegister from './pages/pet/register';\r\nimport Menu from './components/Menu/Menu';\r\nimport Details from './pages/pet/details';\r\nimport Edit from './pages/pet/edit';\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Menu/>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/login\" exact component={Login} />\r\n        <Route path=\"/Register\" exact component={Register} />\r\n        <Route path=\"/pet-details/:petSpecies&:petName&:petId\" exact component={Details} />\r\n        <Route path=\"/pet-details/:petSpecies&:petName&:petId/edit\" exact component={Edit} />\r\n        <Route path=\"/pet/register\" exact component={PetRegister} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}